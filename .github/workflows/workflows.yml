# 配置文件不一定需要为 ”workflows.yml“ 只需为 *.yml 即可
# 工作流程的名称
name: Build and Deploy Spring Boot Application
# 定义触发工作流程的事件
on:
  # 当有代码被推送到仓库时触发
  push:
    # 指定触发工作流程的分支
    branches:
      # 这里指定为 main 分支
      - main
    # 允许手动触发此工作流程
  workflow_dispatch:

# 定义要执行的一系列作业
jobs:
  # 作业名称
  build-and-push-docker-image:
    # 指定运行作业的虚拟机环境
    runs-on: ubuntu-latest
    # 定义作业中的步骤
    steps:
      # 使用 actions/checkout@v2 检出代码，检出代码的意思是：将仓库代码 GitHub 仓库中的代码下载到运行 GitHub Actions的虚拟环境
      - uses: actions/checkout@v2
      # 设置任务名称: 设置 Docker Buildx
      - name: Set up Docker Buildx
        # 设置 Docker Buildx
        # Docker Buildx 是一个 Docker 的构建框架
        # Docker Buildx 的构建支持多平台构建 （如 linux/amd64, linux/arm64, linux/arm/v7 等）
        # 支持构建结果输出，可以直接将构建的镜像推送到远程仓库，或者导出到本地文件系统。
        # 每一个 uses 都是一个 "Action" 动作。同时"Action" 是指一个可重用的组件，它封装了一组逻辑，可以在工作流程中被多次使用。
        uses: docker/setup-buildx-action@v1
      # 设置任务名称
      # 登录到 Docker Hub
      - name: Log in to Docker Hub
        # 每一个 uses 都是一个 "Action" 动作。同时"Action" 是指一个可重用的组件，它封装了一组逻辑，可以在工作流程中被多次使用。
        # 它的主要作用是在 GitHub Actions 的运行环境中登录到 Docker 仓库。这使得后续步骤（如构建并推送 Docker 镜像到仓库）可以执行，因为这些步骤通常需要认证信息来访问并修改 Docker 仓库内容。
        uses: docker/login-action@v1
        # 使用 with 关键字设置步骤的参数
        # 说白了就是通过这个关键字，告诉 GitHub Actions 要从 GitHub Secrets 中，
        # 获取 ${{ secrets.DOCKER_USERNAME }} 和 ${{ secrets.DOCKER_PASSWORD }} 这两个变量
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      # 构建并推送 Docker 镜像
      - name: Build and push Docker image
        # 每一个 uses 都是一个 "Action" 动作。同时"Action" 是指一个可重用的组件，它封装了一组逻辑，可以在工作流程中被多次使用。
        # 用于构建 Docker 镜像并（可选地）将它们推送到 Docker Hub 或其他 Docker 镜像仓库
        uses: docker/build-push-action@v2
        with:
          # Docker 构建上下文路径
          context: .
          # 指定 Dockerfile 的位置
          file: ./Dockerfile
          # 推送镜像到 Docker Hub
          push: true
          # 镜像标签
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest


  deploy-to-server:
    needs: build-and-push-docker-image
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Docker image to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest
            docker stop spring || true
            docker rm -f spring || true
            docker run -d -p 30229:30229 --name spring ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest
